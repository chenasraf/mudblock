name: mudblock
description: MUD game client - A cutting edge client for an old time genre.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.1.0+1

environment:
  sdk: '>=3.1.2 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  ctelnet: any
  # ctelnet:
  #   path: ../ctelnet
  terminal_color_parser: any
  # terminal_color_parser:
  #   path: ../terminal_color_parser
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  provider: ^6.0.5
  window_manager: ^0.3.6
  shared_preferences: ^2.2.1
  easy_debounce: ^2.0.3
  encrypt: ^5.0.3
  # localstore: ^1.3.5
  path: ^1.8.3
  uuid: ^3.0.7
  meta: ^1.9.1
  lua_dardo: ^0.0.5
  path_provider: ^2.1.1
  package_info_plus: ^4.1.0
  url_launcher: ^6.1.14
  flutter_background_service: ^5.0.1
  awesome_notifications_core: 0.8.0
  awesome_notifications: any
  permission_handler: ^11.0.1
  wakelock_plus: ^1.2.1
  # permission_handler: ^11.0.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  btool: ^0.1.3
  script_runner:
    path: ../script_runner
  icons_launcher: ^2.1.4

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/images/logo/logo.png
    - assets/images/logo/logo@4x.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  fonts:
    - family: Menlo
      fonts:
        - asset: assets/fonts/Menlo.ttc
    - family: Fira Code
      fonts:
        - asset: assets/fonts/FiraCode-Regular.ttf
        - asset: assets/fonts/FiraCode-Bold.ttf
          weight: 700
        - asset: assets/fonts/FiraCode-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/FiraCode-Medium.ttf
          weight: 500
        - asset: assets/fonts/FiraCode-Light.ttf
          weight: 300
        # - asset: assets/fonts/FiraCode-Retina.ttf

flutter_native_splash:
  color: '#fcf5e5'
  color_dark: '#1c1e21'
  image: 'assets/images/logo/logo@4x.png'
icons_launcher:
  image_path: 'assets/images/logo/logo@6x.png'
  platforms:
    android:
      enable: true
      # image_path: 'assets/images/launcher_icons/android.png'
    macos:
      enable: true
      # image_path: 'assets/images/launcher_icons/ios.png'
      #   web:
      #     enable: true
      #     favicon_path: 'assets/images/logo.png'
      #   ios:
      #     enable: true
      #     image_path: 'assets/images/launcher_icons/ios.png'
      #   windows:
      #     enable: true
      #   linux:
      #     enable: true
      #   remove_alpha_ios: true
      #   remove_alpha_macos: true

script_runner:
  scripts:
    - build:apk: flutter build apk --no-tree-shake-icons
    - name: push:apk
      suppress_header_output: true
      cmd: |-
        name=$(dart run btool get packageName)
        version=$(dart run btool get packageVersion)
        source="$(pwd)/build/app/outputs/flutter-apk/app-release.apk"
        target="/sdcard/Download/$name-$version.apk"
        echo "adb push $source $target"
        adb push $source $target
    - install:apk: adb install build/app/outputs/flutter-apk/app-release.apk
    - to-android: build:apk && push:apk && install:apk
    - auto-fix: dart fix --apply
    - format: dart format .
    - gen:page: npx simple-scaffold@latest -t templates/page -o lib/modules -s true
    - gen:model: npx simple-scaffold@latest -t templates/model -o lib/models -s false
    - gen:widget: npx simple-scaffold@latest -t templates/widget -o lib/widgets -s false
    - gen:icons: flutter pub run icons_launcher:create
